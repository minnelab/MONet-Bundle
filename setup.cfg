[metadata]
name = monet-bundle
author = Bendazzoli Simone
author_email = simben@kth.se
url = https://github.com/minnelab/MONet-Bundle.git
description = A Python package providing the MONet Bundle for nnUNet, extending it with MONAI functionalities and access to the MAIA Segmentation Portal.
long_description = file:README.md
long_description_content_type = text/markdown; charset=UTF-8
platforms = OS Independent
license = GPLv3
license_files =
    LICENSE
project_urls =
    Documentation= https://monet-bundle.readthedocs.io
    Bug Tracker= https://github.com/minnelab/MONet-Bundle/issues
    Source Code= https://github.com/minnelab/MONet-Bundle

[options]
python_requires = >= 3.8
# for compiling and develop setup only
# no need to specify the versions so that we could
# compile for multiple targeted versions.
install_requires =
    PyJWT
    python-on-whales
    SimpleITK
    PyQt5
    loguru
    requests

[flake8]
select = B,C,E,F,N,P,T4,W,B9
max_line_length = 120
ignore =
    E203
    E501
    E741
    W503
    W504
    C408
    N812
    B023
    B905
    B028
    B907
    B908
per_file_ignores = __init__.py: F401, __main__.py: F401
exclude = *.pyi,.git,.eggs,_version.py,versioneer.py,venv,.venv,_version.py

[isort]
known_first_party = MONet
profile = black
line_length = 120
skip = .git, .eggs, venv, .venv, versioneer.py, _version.py, conf.py,
skip_glob = *.pyi
add_imports = from __future__ import annotations
append_only = true

[versioneer]
VCS = git
style = pep440
versionfile_source = MONet/_version.py
versionfile_build = MONet/_version.py
tag_prefix = v
parentdir_prefix = 

[mypy]
# Suppresses error messages about imports that cannot be resolved.
ignore_missing_imports = True
# Changes the treatment of arguments with a default value of None by not implicitly making their type Optional.
no_implicit_optional = True
# Warns about casting an expression to its inferred type.
warn_redundant_casts = True
# No error on unneeded # type: ignore comments.
warn_unused_ignores = False
# Shows a warning when returning a value with type Any from a function declared with a non-Any return type.
warn_return_any = True
# Prohibit equality checks, identity checks, and container checks between non-overlapping types.
strict_equality = True
# Shows column numbers in error messages.
show_column_numbers = True
# Shows error codes in error messages.
show_error_codes = True
# Use visually nicer output in error messages: use soft word wrap, show source code snippets, and show error location markers.
pretty = False
# Warns about per-module sections in the config file that do not match any files processed when invoking mypy.
warn_unused_configs = True
# Make arguments prepended via Concatenate be truly positional-only.
strict_concatenate = True
# Allows variables to be redefined with an arbitrary type,
# as long as the redefinition is in the same block and nesting level as the original definition.
# allow_redefinition = True

exclude = venv/

[mypy-versioneer]
# Ignores all non-fatal errors.
ignore_errors = True



[coverage:run]
concurrency = multiprocessing
source = .
data_file = .coverage/.coverage
omit = setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
# Don't complain if tests don't hit code:
    raise NotImplementedError
    if __name__ == .__main__.:
show_missing = True
skip_covered = True

[coverage:xml]
output = coverage.xml